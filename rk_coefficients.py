import numpy as np


class RKCoefficients:
    """
    Coefficients for Runge-Kutta method
    """
    def __init__(self, flag=0):
        self.flag = flag
        if flag == 0:
            # schneider method
            s = 8
            stages = s
            order = 5
            alpha = np.zeros((s, s))
            beta = np.zeros((s, s))
            gamma = np.zeros((s, s))
            b = np.zeros((s,))
            e = np.zeros((s,))

            alpha[1, 0] = 0.5

            alpha[2, 0] = 0.25
            alpha[2, 1] = 0.25

            alpha[3, 0] = 0.25
            alpha[3, 1] = 0.25

            alpha[4, 0] = 9.0 / 32.0
            alpha[4, 1] = -21.0 / 32
            alpha[4, 2] = -117.0 / 184.0
            alpha[4, 3] = 81.0 / 46.0

            alpha[5, 0] = 97.0 / 144.0
            alpha[5, 1] = -751.0 / 1536.0
            alpha[5, 2] = 26107.0 / 11776.0
            alpha[5, 3] = -3249.0 / 1472.0
            alpha[5, 4] = 29.0 / 36.0

            alpha[6, 0] = 5.0 / 27.0
            alpha[6, 1] = -65.0 / 128.0
            alpha[6, 2] = -3873.0 / 2944.0
            alpha[6, 3] = 947.0 / 368.0
            alpha[6, 4] = -5.0 / 27.0
            alpha[6, 5] = 0.25

            alpha[7, 0] = 71.0 / 270.0
            alpha[7, 3] = 2.0 / 5.0
            alpha[7, 4] = 32.0 / 135.0
            alpha[7, 5] = -3.0 / 20.0
            alpha[7, 6] = 0.25

            for i in range(s):
                beta[i, i] = 0.25

            beta[2, 0] = -1.0 / 12.0
            beta[2, 1] = -1.0 / 12.0

            beta[3, 0] = 11.0 / 114.0
            beta[3, 1] = -13.0 / 64.0
            beta[3, 2] = 23.0 / 192.0

            beta[4, 0] = 0.75
            beta[4, 1] = -819.0 / 1024.0
            beta[4, 2] = 11061.0 / 23552.0
            beta[4, 3] = 243.0 / 736.0

            beta[5, 0] = 5.0 / 27.0
            beta[5, 1] = -65.0 / 128.0
            beta[5, 2] = -3873.0 / 2944.0
            beta[5, 3] = 947.0 / 368.0
            beta[5, 4] = -5.0 / 27.0

            beta[6, 0] = 71.0 / 270.0
            beta[6, 3] = 2.0 / 5.0
            beta[6, 4] = 32.0 / 135.0
            beta[6, 5] = -3.0 / 20.0

            beta[7, 0] = 71.0 / 270.0
            beta[7, 3] = 2.0 / 5.0
            beta[7, 4] = 32.0 / 135.0
            beta[7, 5] = -8.0 / 15.0
            beta[7, 6] = 23.0 / 60.0

            for i in range(s):
                b[i] = alpha[s - 1, i]
                for j in range(i):
                    gamma[i, j] = beta[i, j] - alpha[i, j]

            e[5] = -8.0 / 15.0 + 3.0 / 20.0
            e[6] = 23.0 / 60.0 - 0.25
            e[7] = 0.25

            self.stages = stages
            self.alpha = alpha
            self.gamma = gamma
            self.b = b
            self.e = e
        elif flag == 1:
            # rodas
            gamma_ = 0.25
            s = 6
            stages = s
            order = 4
            alpha = np.zeros((s, s))
            gamma = np.zeros((s, s))
            b = np.zeros((s,))
            e = np.zeros((s,))
            for i in range(s):
                gamma[i, i] = gamma_
            a21 = 0.386
            a31 = 0.146074707525418
            a32 = 0.063925292474582
            a41 = -0.330811503667722
            a42 = 0.711151025168282
            a43 = 0.24966047849944
            a51 = -4.552557186318003
            a52 = 1.710181363241322
            a53 = 4.014347332103150
            a54 = -0.171971509026469
            a61 = 2.428633765466978
            a62 = -0.382748733764781
            a63 = -1.855720330929574
            a64 = 0.559835299227375
            a65 = 0.25
            g21 = -0.3543
            g31 = -0.133602505268175
            g32 = -0.012897494731825
            g41 = 1.526849173006459
            g42 = -0.533656288750454
            g43 = -1.279392884256
            g51 = 6.981190951784981
            g52 = -2.092930097006103
            g53 = -5.870067663032724
            g54 = 0.731806808253845
            g61 = -2.080189494180926
            g62 = 0.59576235567668
            g63 = 1.701617798267255
            g64 = -0.088514519835879
            g65 = -0.378676139927128
            b1 = 0.348444271286054
            b2 = 0.213013621911897
            b3 = -0.154102532662319
            b4 = 0.471320779391497
            b5 = -0.128676139927129
            b6 = 0.25
            be1 = -4.552557186318003
            be2 = 1.710181363241322
            be3 = 4.014347332103150
            be4 = -0.171971509026469
            be5 = 0
            be6 = 0
            alpha[1, 0] = a21
            alpha[2, 0] = a31
            alpha[2, 1] = a32
            alpha[3, 0] = a41
            alpha[3, 1] = a42
            alpha[3, 2] = a43
            alpha[4, 0] = a51
            alpha[4, 1] = a52
            alpha[4, 2] = a53
            alpha[4, 3] = a54
            alpha[5, 0] = a61
            alpha[5, 1] = a62
            alpha[5, 2] = a63
            alpha[5, 3] = a64
            alpha[5, 4] = a65
            gamma[1, 0] = g21
            gamma[2, 0] = g31
            gamma[2, 1] = g32
            gamma[3, 0] = g41
            gamma[3, 1] = g42
            gamma[3, 2] = g43
            gamma[4, 0] = g51
            gamma[4, 1] = g52
            gamma[4, 2] = g53
            gamma[4, 3] = g54
            gamma[5, 0] = g61
            gamma[5, 1] = g62
            gamma[5, 2] = g63
            gamma[5, 3] = g64
            gamma[5, 4] = g65
            b[0] = b1
            b[1] = b2
            b[2] = b3
            b[3] = b4
            b[4] = b5
            b[5] = b6
            e[0] = b1 - be1
            e[1] = b2 - be2
            e[2] = b3 - be3
            e[3] = b4 - be4
            e[4] = b5 - be5
            e[5] = b6 - be6

            self.stages = stages
            self.alpha = alpha
            self.gamma = gamma
            self.b = b
            self.e = e
        elif flag == 2:
            # rodasp
            gamma_ = 0.25
            s = 6
            stages = s
            order = 4
            alpha = np.zeros((s, s))
            gamma = np.zeros((s, s))
            b = np.zeros((s,))
            e = np.zeros((s,))
            for i in range(s):
                gamma[i, i] = gamma_

            alpha[1, 0] = 7.500000e-01
            alpha[2, 0] = 8.612040e-02
            alpha[2, 1] = 1.238796e-01
            alpha[3, 0] = 7.749345e-01
            alpha[3, 1] = 1.492652e-01
            alpha[3, 2] = -2.941997e-01
            alpha[4, 0] = 5.308747e+00
            alpha[4, 1] = 1.330892e+00
            alpha[4, 2] = -5.374138e+00
            alpha[4, 3] = -2.655010e-01
            alpha[5, 0] = -1.764438e+00
            alpha[5, 1] = -4.747566e-01
            alpha[5, 2] = 2.369692e+00
            alpha[5, 3] = 6.195024e-01
            alpha[5, 4] = 2.500000e-01
            gamma[0, 0] = 2.500000e-01
            gamma[1, 0] = -7.500000e-01
            gamma[1, 1] = 2.500000e-01
            gamma[2, 0] = -1.355124e-01
            gamma[2, 1] = -1.379916e-01
            gamma[2, 2] = 2.500000e-01
            gamma[3, 0] = -1.256984e+00
            gamma[3, 1] = -2.501447e-01
            gamma[3, 2] = 1.220929e+00
            gamma[3, 3] = 2.500000e-01
            gamma[4, 0] = -7.073184e+00
            gamma[4, 1] = -1.805649e+00
            gamma[4, 2] = 7.743830e+00
            gamma[4, 3] = 8.850034e-01
            gamma[4, 4] = 2.500000e-01
            gamma[5, 0] = 1.684069e+00
            gamma[5, 1] = 4.182659e-01
            gamma[5, 2] = -1.881406e+00
            gamma[5, 3] = -1.137861e-01
            gamma[5, 4] = -3.571429e-01
            gamma[5, 5] = 2.500000e-01
            b[0] = -8.036837e-02
            b[1] = -5.649061e-02
            b[2] = 4.882856e-01
            b[3] = 5.057162e-01
            b[4] = -1.071429e-01
            b[5] = 2.500000e-01
            e[0] = 1.684069e+00
            e[1] = 4.182659e-01
            e[2] = -1.881406e+00
            e[3] = -1.137861e-01
            e[4] = -3.571429e-01
            e[5] = 2.500000e-01

            self.stages = stages
            self.alpha = alpha
            self.gamma = gamma
            self.b = b
            self.e = e
        elif flag == 3:
            # wb34
            gamma_ = 5.728160624821350e-01
            s = 6
            stages = s
            order = 4
            alpha = np.zeros((s, s))
            gamma = np.zeros((s, s))
            b = np.zeros((s,))
            e = np.zeros((s,))
            for i in range(s):
                gamma[i, i] = gamma_

            a21 = 5.200000000000000e-01
            g21 = -5.200000000000000e-01
            a31 = 2.851168665349716e-01
            g31 = -1.034772479328808e+00
            a32 = 6.248831334650284e-01
            g32 = 6.501423878169246e-01
            a41 = 1.046681454850720e+00
            g41 = 2.625385974420247e-01
            a42 = -1.127221164631929e+00
            g42 = 2.922670258511625e-01
            a43 = 3.910371962111624e-01
            g43 = -9.114397095544884e-01
            a51 = 8.451547656533995e-02
            g51 = 1.574388804512719e-01
            a52 = 1.140000000000000e+00
            g52 = 6.277349506307095e-02
            a53 = -6.668002390497316e-02
            g53 = -5.710378229055593e-01
            a54 = -1.578354526603668e-01
            g54 = -2.219906150909184e-01
            a61 = 2.419543570166118e-01
            g61 = 0.000000000000000e-00
            a62 = 1.202773495063071e+00
            g62 = 0.000000000000000e-00
            a63 = -6.377178468105325e-01
            g63 = 0.000000000000000e-00
            a64 = -3.798260677512852e-01
            g64 = 0.000000000000000e-00
            a65 = 5.728160624821350e-01
            g65 = -5.728160624821350e-01
            b1 = 2.419543570166118e-01
            b1e = 2.419543570166118e-01
            b2 = 1.202773495063071e+00
            b2e = 1.202773495063071e+00
            b3 = -6.377178468105325e-01
            b3e = -6.377178468105325e-01
            b4 = -3.798260677512852e-01
            b4e = -3.798260677512852e-01
            b5 = 0.000000000000000e-00
            b5e = 5.728160624821350e-01
            b6 = 5.728160624821350e-01
            b6e = 0.000000000000000e-00
            alpha[1, 0] = a21
            alpha[2, 0] = a31
            alpha[2, 1] = a32
            alpha[3, 0] = a41
            alpha[3, 1] = a42
            alpha[3, 2] = a43
            alpha[4, 0] = a51
            alpha[4, 1] = a52
            alpha[4, 2] = a53
            alpha[4, 3] = a54
            alpha[5, 0] = a61
            alpha[5, 1] = a62
            alpha[5, 2] = a63
            alpha[5, 3] = a64
            alpha[5, 4] = a65
            gamma[1, 0] = g21
            gamma[2, 0] = g31
            gamma[2, 1] = g32
            gamma[3, 0] = g41
            gamma[3, 1] = g42
            gamma[3, 2] = g43
            gamma[4, 0] = g51
            gamma[4, 1] = g52
            gamma[4, 2] = g53
            gamma[4, 3] = g54
            gamma[5, 0] = g61
            gamma[5, 1] = g62
            gamma[5, 2] = g63
            gamma[5, 3] = g64
            gamma[5, 4] = g65
            b[0] = b1
            b[1] = b2
            b[2] = b3
            b[3] = b4
            b[4] = b5
            b[5] = b6
            e[0] = b1 - b1e
            e[1] = b2 - b2e
            e[2] = b3 - b3e
            e[3] = b4 - b4e
            e[4] = b5 - b5e
            e[5] = b6 - b6e

            self.stages = stages
            self.alpha = alpha
            self.gamma = gamma
            self.b = b
            self.e = e
